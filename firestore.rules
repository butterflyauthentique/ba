rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && (
        request.auth.token.email == 'butterfly.auth@gmail.com' ||
        (exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) &&
         get(/databases/$(database)/documents/admins/$(request.auth.token.email)).data.isActive == true)
      );
    }
    // Allow public read access to all products
    match /products/{productId} {
      allow read: if true; // Allow all reads for public access
      allow write: if request.auth != null; // Allow authenticated users to write
    }
    
    // Allow public read access to categories
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to read their own orders
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || request.auth.token.admin == true);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || request.auth.token.admin == true);
    }
    
    // Allow public read access to user data (for auth checks)
    // Allow authenticated users to read/write their own user data
    match /users/{userId} {
      allow read: if true; // Allow public reads for auth checks
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to manage their own cart
    match /cart/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin management - only super admin can manage admins
    match /admins/{adminEmail} {
      allow read: if request.auth != null && 
        (request.auth.token.email == 'butterfly.auth@gmail.com' || request.auth.token.email == adminEmail);
      allow write: if request.auth != null && request.auth.token.email == 'butterfly.auth@gmail.com';
    }

    // Blog posts: public readable when published (or scheduled and time reached). Writes admin-only
    match /posts/{postId} {
      allow read: if
        resource.data.status == 'published' ||
        (resource.data.status == 'scheduled' && resource.data.scheduledAt <= request.time);

      allow create, update, delete: if isAdmin();
    }
    
      // Wishlist - users can manage their own wishlist items
  match /wishlist/{itemId} {
    allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
  }

  // Allow authenticated users to read/write all data for development
  match /{document=**} {
    allow read, write: if request.auth != null;
  }
  }
} 